DECLARE 

CURSOR C1 IS
SELECT REGEXP_SUBSTR('1,1,2,2','[^,]+', 1, LEVEL) AS CDCOOPER,
       REGEXP_SUBSTR('1,2,1,2','[^,]+', 1, LEVEL) AS IDSEGMENTO,
       REGEXP_SUBSTR('8000,8001,8000,8001','[^,]+', 1, LEVEL) AS CDLINHA_CREDITO,
       REGEXP_SUBSTR('64,64,64,64','[^,]+', 1, LEVEL) AS CDFINALIDADE
  FROM DUAL 
CONNECT BY REGEXP_SUBSTR('1,1,2,2','[^,]+', 1, LEVEL) IS NOT NULL;

CURSOR C2(P_CDCOOPER IN NUMBER,P_IDSEGMENTO IN NUMBER) IS
SELECT MAX(IDSUBSEGMENTO)+1 AS IDSUBSEGMENTO
  FROM TBEPR_SUBSEGMENTO
 WHERE CDCOOPER = P_CDCOOPER
   AND IDSEGMENTO = P_IDSEGMENTO;

-- Local variables here
VR_EXCSAIDA EXCEPTION;
VR_MSGSAIDA VARCHAR2(200);
VR_IDSUBSEGMENTO TBEPR_SUBSEGMENTO.IDSUBSEGMENTO%TYPE;
VR_DSSUBSEGMENTO VARCHAR2(200) := 'Microcredito DIM';
VR_IDMICROCREDITO NUMBER := 1;
BEGIN
   
    FOR R1 IN C1 LOOP           
      --Inserção do subsegmento
      VR_IDSUBSEGMENTO:=NULL;
      OPEN C2(R1.CDCOOPER,R1.IDSEGMENTO);
      FETCH C2 INTO VR_IDSUBSEGMENTO;
      CLOSE C2;
      
      BEGIN
        INSERT 
          INTO TBEPR_SUBSEGMENTO (CDCOOPER,IDSEGMENTO,IDSUBSEGMENTO,DSSUBSEGMENTO,CDLINHA_CREDITO,FLGGARANTIA,TPGARANTIA,
                                  PEMAX_AUTORIZADO,PEEXCEDENTE,VLMAX_PROPOSTA,CDFINALIDADE,IDMICROCREDITO)
                           VALUES(R1.CDCOOPER,R1.IDSEGMENTO,VR_IDSUBSEGMENTO,VR_DSSUBSEGMENTO,R1.CDLINHA_CREDITO,0,0,0,0,0,R1.CDFINALIDADE,VR_IDMICROCREDITO);       
      EXCEPTION
         WHEN OTHERS THEN
           VR_MSGSAIDA := 'Erro ao inserir na tabela TBEPR_SUBSEGMENTO -->'||SQLERRM;
           RAISE VR_EXCSAIDA;
      END;
      DBMS_OUTPUT.PUT_LINE('Inclusão do subsegmento realizada com sucesso CDCOOPER:'||R1.CDCOOPER||' IDSEGMENTO '||R1.IDSEGMENTO||' IDSUBSEGMENTO '||VR_IDSUBSEGMENTO);
      COMMIT;
    END LOOP;
EXCEPTION
  WHEN VR_EXCSAIDA THEN
    DBMS_OUTPUT.PUT_LINE(VR_MSGSAIDA);
    ROLLBACK;
  WHEN OTHERS THEN
    DBMS_OUTPUT.PUT_LINE('Erro geral ao inserir o subsegmento: '||SQLERRM);
    ROLLBACK;
END;
