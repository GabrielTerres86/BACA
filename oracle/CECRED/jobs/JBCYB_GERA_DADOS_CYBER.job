-- Inclusão de tratamento de erro e execute immediate (Carlos)
BEGIN
  DECLARE

  CURSOR cr_job (pr_owner VARCHAR2,
                 pr_job_name VARCHAR2) IS
  SELECT 1
    FROM all_scheduler_jobs j
   WHERE UPPER(j.owner) = UPPER(pr_owner)
     AND UPPER(j.job_name) = UPPER(pr_job_name);

  rw_job cr_job%ROWTYPE;
  
  BEGIN
    
    -- JOB NOVO A SER CRIADO
    OPEN cr_job (pr_owner    => 'CECRED',
                 pr_job_name => 'JBCYB_GERA_DADOS_CYBER');
    FETCH cr_job INTO rw_job;
    
    IF cr_job%FOUND THEN
      sys.dbms_scheduler.drop_job(job_name => 'CECRED.JBCYB_GERA_DADOS_CYBER');
    END IF;
    
    CLOSE cr_job;

    EXECUTE IMMEDIATE 'ALTER SESSION SET 
        nls_calendar = ''GREGORIAN''
        nls_comp = ''BINARY''
        nls_date_format = ''DD-MON-RR''
        nls_date_language = ''AMERICAN''
        nls_iso_currency = ''AMERICA''
        nls_language = ''AMERICAN''
        nls_length_semantics = ''BYTE''
        nls_nchar_conv_excp = ''FALSE''
        nls_numeric_characters = ''.,''
        nls_sort = ''BINARY''
        nls_territory = ''AMERICA''
        nls_time_format = ''HH.MI.SSXFF AM''
        nls_time_tz_format = ''HH.MI.SSXFF AM TZR''
        nls_timestamp_format = ''DD-MON-RR HH.MI.SSXFF AM''
        nls_timestamp_tz_format = ''DD-MON-RR HH.MI.SSXFF AM TZR''';

    sys.dbms_scheduler.create_job(job_name            => 'CECRED.JBCYB_GERA_DADOS_CYBER',
                                  job_type            => 'PLSQL_BLOCK',
                                  job_action          => '
                                  DECLARE
                                    vr_dscritic VARCHAR2(4000);
                                  BEGIN                                    
                                    CECRED.pc_gera_dados_cyber(pr_dscritic => vr_dscritic);
                                    IF vr_dscritic IS NOT NULL THEN
                                      raise_application_error(-20001,vr_dscritic);
                                    END IF;
                                  END;',
                                  start_date          => TO_TIMESTAMP_TZ(to_char(SYSDATE+1,'DD/MM/RRRR')||' 08:00 America/Sao_Paulo','DD/MM/RRRR HH24:MI TZR'),
                                  repeat_interval     => 'Freq=daily;ByDay=Mon, Tue, Wed, Thu, Fri;ByHour=8;ByMinute=0;BySecond=0',
                                  end_date            => to_date(null),
                                  job_class           => 'DEFAULT_JOB_CLASS',
                                  enabled             => true,
                                  auto_drop           => true,
                                  comments            => '');
  END;
END;
/
