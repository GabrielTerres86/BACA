begin
  sys.dbms_scheduler.create_job(job_name            => 'CECRED.JBCHQ_ENVIO_GRAFICA',
                                job_type            => 'PLSQL_BLOCK',
                                job_action          => 'declare
     CURSOR cr_tbchq_seguranca_cheque IS
       SELECT distinct a.cdcooper cdcooper, a.nrpedido, a.tprequis
         FROM tbchq_seguranca_cheque a
         WHERE a.idstatus_atualizacao_hsm = 2
             AND NOT EXISTS (SELECT 1 
                               FROM tbchq_seguranca_cheque b
                              WHERE b.idstatus_atualizacao_hsm = 0 OR 
                                    b.idstatus_atualizacao_hsm = 1 OR 
                                    b.idstatus_atualizacao_hsm = 3)
         ORDER BY a.cdcooper;
  
     vr_stprogra                 BINARY_INTEGER;
     vr_infimsol                 BINARY_INTEGER;
     vr_cdcritic                 crapcri.cdcritic%TYPE;
     vr_dscritic                 crapcri.dscritic%TYPE;
     
     rw_tbchq_seguranca_cheque   cr_tbchq_seguranca_cheque%ROWTYPE;
         
  BEGIN
     OPEN cr_tbchq_seguranca_cheque;
     FETCH cr_tbchq_seguranca_cheque INTO rw_tbchq_seguranca_cheque;
     WHILE cr_tbchq_seguranca_cheque%FOUND LOOP
        cheq0003.pc_gera_arq_grafica_cheque(pr_cdcooper => rw_tbchq_seguranca_cheque.cdcooper, 
                                            pr_nrpedido => rw_tbchq_seguranca_cheque.nrpedido,
                                            pr_tprequis => rw_tbchq_seguranca_cheque.tprequis,
                                            pr_flgresta => 0, 
                                            pr_stprogra => vr_stprogra, 
                                            pr_infimsol => vr_infimsol, 
                                            pr_cdcritic => vr_cdcritic, 
                                            pr_dscritic => vr_dscritic);
        -- executa o JOB
        IF nvl(vr_cdcritic,0) <> 0 or vr_dscritic IS NOT NULL THEN
           raise_application_error(-20001, vr_dscritic);
        END IF;
  
        FETCH cr_tbchq_seguranca_cheque INTO rw_tbchq_seguranca_cheque;
  
     END LOOP;
        
     CLOSE cr_tbchq_seguranca_cheque;
     
  END;',
                                start_date          => to_date('20-06-2019 00:00:00', 'dd-mm-yyyy hh24:mi:ss'),
                                repeat_interval     => 'Freq=Daily;Interval=5;ByDay=Mon, Tue, Wed, Thu, Fri;ByHour=07, 08, 09, 10, 11, 12, 13, 14, 15, 16, 17;ByMinute=05',
                                end_date            => to_date(null),
                                job_class           => 'DEFAULT_JOB_CLASS',
                                enabled             => false,
                                auto_drop           => false,
                                comments            => 'Rodar rotina de envio de arquivo de impressão de cheques para a gráfica. Esta execução complementa a execução prévia na diária do pc_crps408 e da atualização do código de segurança via HSM (SOA/Dinamo)');
end;
/
